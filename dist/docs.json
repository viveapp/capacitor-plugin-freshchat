{
  "api": {
    "name": "FreshchatCapacitorPlugin",
    "slug": "freshchatcapacitorplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "initialize",
        "signature": "(options: InitOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "InitOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Initialize the Freshchat SDK",
        "complexTypes": [
          "InitOptions"
        ],
        "slug": "initialize"
      },
      {
        "name": "updateUser",
        "signature": "(options: UpdateUserOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "UpdateUserOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "UpdateUserOptions"
        ],
        "slug": "updateuser"
      },
      {
        "name": "updateUserProperties",
        "signature": "(options: Record<string, unknown>) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "Record<string, unknown>"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "Record"
        ],
        "slug": "updateuserproperties"
      },
      {
        "name": "showConversations",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showconversations"
      },
      {
        "name": "showFAQs",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showfaqs"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "InitOptions",
      "slug": "initoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "appId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "appKey",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "UpdateUserOptions",
      "slug": "updateuseroptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "firstName",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "lastName",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "email",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "phone",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ countryCode: string; number: string; } | undefined"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "Record",
      "slug": "record",
      "docs": "Construct a type with a set of properties K of type T",
      "types": [
        {
          "text": "{\r\n    [P in K]: T;\r\n}",
          "complexTypes": [
            "K",
            "T"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}